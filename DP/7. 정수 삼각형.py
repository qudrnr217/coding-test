#!/usr/bin/env python
# coding: utf-8

# 위 그림은 크기가 5인 정수 삼각형의 한 모습입니다.
# 맨 위층 7부터 시작해서 아래에 있는 수 중 하나를 선택하여 아래층으로 내려올 때, 이제까지 선택된 수의 합이 최대가 되는 경로를 구하는 프로그램을 작성하시오. 아래층에 있는 수는 현재 층에서선택된 수의 대각선 왼쪽 도는 대각선 오른쪽에 있는 것 중에서만 선택할 수 있습니다.
# 삼각형의 크기는 1이상 500이하입니다. 삼각형을 이루고 있는 각 수는 모두 정수이며, 그 값의 범위는 0 이상 9999이하 입니다.

# # 입력조건
# 첫째 줄에 삼각형의 크기 n(1<=n<=500)이 주어지고, 둘째 줄 부터 n+1번째 줄까지 정수 삼각형이 주어집니다.
# 
# # 출력조건
# 첫째 줄에 합이 최대가 되는 경로에 있는 수의 합을 출력합니다.
# 
# # 입력 예시
# 5<br>
# 7<br>
# 3 8<br>
# 8 1 0<br>
# 2 7 4 4<br>
# 4 5 2 6 5<br>
# 
# # 출력예시
# 30
# 

# In[27]:


import copy
n=int(input())
# for i in range(n):
#     triangle.append(list(map(int,input().split())))

arr=[[7], [3, 8], [8, 1, 0], [2, 7, 4, 4], [4, 5, 2, 6, 5]]
d=copy.deepcopy(arr)



#print(triangle)

for i in range(n-1,0,-1):
    for j in range(i):
        d[i-1][j]=arr[i-1][j]+max(d[i][j],d[i][j+1])
        
        
print(d[0][0])
        
        
        


# In[ ]:




