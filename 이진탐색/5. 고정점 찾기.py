#!/usr/bin/env python
# coding: utf-8

# 고정점이란, 수열의 원소 중에서 그 값이 인덱스와 동일한 원소를 의미합니다. 예를 들어 수열 a={-15,-4,2,8,13}이 있을 때, a[2]=2이므로, 고정점은 2가 됩니다.
# 하나의 수열이 N개의 서로 다른 원소를 포함하고 있으며, 모든 원소가 오름차순으로 정렬되어 있습니다. 이때 이 수열에서 고정점이 있다면, 고정점을 출력하는 프로그램을 작성하세요. 고정점은 최대 1개만 존재합니다. 만약 고정점이 없다면 -1을 출력합니다.
# 단, 이 문제는 시간 복잡도 O(logN)으로 알고리즘을 설계하지 않으면 ' 시간초과 ' 판정을 받습니다.

# # 입력조건
# 첫째 줄에 N이 입력됩니다. (1<=N<=1,000,000)
# 둘째 줄에 N개의 원소가 정수 형태로 공백으로 구분되어 입력됩니다.
# (-10^9<=각 원소의 값<=10^9(
# 
# # 출력 조건
# 고정점을 출력한다. 고정점이 없다면 -1을 출력

# In[15]:


n=int(input())
#a=[-15,-6,-1,3,7]
#a=[-15,-4,2,8,9,13,15]
a=[-15,-4,3,8,9,13,15]
def binary_search(a,start,end):
    while start<=end:
        index=(start+end)//2
        if index<a[index]:
            end=index-1
        elif index>a[index]:
            start=index+1
        else:
            return index
    
    return -1

print(binary_search(a,0,len(a)))


# In[ ]:




