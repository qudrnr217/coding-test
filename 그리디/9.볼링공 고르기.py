#!/usr/bin/env python
# coding: utf-8

# a,b 두 사람이 볼링을 치고 있습니다. 두 사람은 서로 무게가 다른 볼링공을 고르려고 합니다. 볼링공은 총 N개가 있으며 각 볼링공마다 무게가 적혀 있고, 공의 번호는 1번부터 순서대로 부여됩니다. 또한 같은 무게의 공이 여러개 있을 수 있지만, 서로 다른 공으로 간주됩니다. 볼링공의 무게는 1부터 M까지의 자연수 형태로 존재합니다.<br>
# 예를 들어 N이 5이고 M이 3이며 각각의 무게가 차례대로 1,3,2,3,2일 때 각 공의 번호가 차례대로 1번부터 5번까지 부여됩니다. 이때 두 사람이 고를 수 있는 볼링공의 번호의 조합을 구하면 다음과 같습니다.
# (1번,2번),(1번,3번),(1번,4번),(1번,5번),(2번,3번),(2번,5번)(3번,4번),(4번,5번)<br>
# 결과적으로 두 사람이 공을 고르는 경우읭 수는 8가지 입니다. N개의 공의 무게가 각각 주어질 때, 두 사람이 볼링공을 고르는 경우의 수를 구하는 프로그램을 작성하세요.
# 
# # 입력 조건 
# 첫째 줄에 볼링공의 개수 N, 공의 최대 무게 M이 공백으로 구분되어 각각 자연수 형태로 주어집니다.(1<=N<=1000, 1<=M<=10)<br>
# 둘째 줄에 각 볼링공의 무게 K가 공백으로 구분되어 순서대로 자연수 형태로 주어집니다.(1<=K<=M)
# 
# # 출력 조건
# 첫째 줄에 두 사람이 볼링공을 고르는 경우의 수를 출력합니다.
# 
# # 입력 예시
# 5 3<br>
# 1 3 2 3 2
# 
# 8 5<br>
# 1 5 4 3 2 4 5 2
# 
# # 출력 예시
# 8<br>
# 25

# In[8]:


n,m=map(int,input().split())


# In[9]:


from itertools import combinations

# arr=[1,3,2,3,2]
arr=[1,5,4,3,2,4,5,2]
#인덱스를 같이 넣어주고
arr2=[]
result=[]
cnt=0
for i in range(len(arr)):
    arr2.append((i,arr[i]))
    
# print(arr2)
    

#조합을 한다.
result=list(combinations(arr2,2))
print(result)
#조합을 했을 때 같은 경우는 제외하고 카운트
for i in result:
    if i[0][1]!=i[1][1]:
        cnt+=1
        
print(cnt)


# In[ ]:




